#OAuth2
#The settings below force gateway to use authorization code grant type with keycloak provider to receive AccessToken.
#In this case when one trying to use gateway to perform a request one going to redirected to keycloak login page.
#After that in case of success login the gateway gonna send one's request in a proper direction with accesstoken in its header
keycloak.host=localhost:8087

spring.security.oauth2.client.registration.gateway.provider=keycloak
spring.security.oauth2.client.registration.gateway.client-id=gateway
spring.security.oauth2.client.registration.gateway.client-secret=n6EfUqePvtdos4bub8Y2I3xdDq5aW5hE
spring.security.oauth2.client.registration.gateway.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.gateway.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.keycloak.authorization-uri=http://${keycloak.host}/auth/realms/brewery/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://${keycloak.host}/auth/realms/brewery/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://${keycloak.host}/auth/realms/brewery/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://${keycloak.host}/auth/realms/brewery/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.user-name-attribute=sub
